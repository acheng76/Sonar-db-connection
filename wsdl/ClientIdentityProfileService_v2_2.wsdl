<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns:wss="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
                  xmlns:xs="http://www.w3.org/2001/XMLSchema"
                  xmlns:ping="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/types/ping_v1"
                  xmlns:ex="http://xmlschema.tmi.telus.com/xsd/common/exceptions/Exceptions_v1_0"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:iface="http://telus.com/wsdl/EO/SecurityMgmt/ClientIdentityProfileService_2_2"
                  xmlns:ci="http://xmlschema.tmi.telus.com/srv/EO/SecurityMgmt/IdentityMgmt/ClientIdentityProfileRequestResponse_v2"
                  name="ClientIdentityProfileService_v2_2.wsdl"
                  targetNamespace="http://telus.com/wsdl/EO/SecurityMgmt/ClientIdentityProfileService_2_2"><!--	Generated File:
			This file was generated by the following xslt:
				http://xmlschema.tmi.telus.com/xsd/common/utils/xmlToWsdl/xmlToWsdl_v2_5.xslt
			Based on a ServiceDefinition.xml file that conforms to the following schema:
				http://xmlschema.tmi.telus.com/xsd/common/utils/xmlToWsdl/ServiceDefinition_v3_0.xsd
			--><wsdl:documentation>Provides methods to access available services to create and update Identity Profiles in the External Client Identity system</wsdl:documentation>
   <wsdl:types>
      <xsd:schema targetNamespace="http://telus.com/wsdl/EO/SecurityMgmt/ClientIdentityProfileService_2_2">
         <xsd:import namespace="http://xmlschema.tmi.telus.com/srv/EO/SecurityMgmt/IdentityMgmt/ClientIdentityProfileRequestResponse_v2"
                     schemaLocation="http://xmlschema.tmi.telus.com/srv/EO/SecurityMgmt/ClientIdentityProfileService_v2_2_RequestResponse.xsd"/>
         <xsd:import namespace="http://xmlschema.tmi.telus.com/xsd/common/exceptions/Exceptions_v1_0"
                     schemaLocation="http://xmlschema.tmi.telus.com/xsd/common/exceptions/Exceptions_v1_0.xsd"/>
         <xsd:import namespace="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/types/ping_v1"
                     schemaLocation="http://xmlschema.tmi.telus.com/xsd/Enterprise/BaseTypes/types/ping_v1.xsd"/>
      </xsd:schema>
   </wsdl:types>
   <wsdl:message name="initializeProfiles">
      <wsdl:part name="parameters" element="ci:initializeProfilesRqstType"/>
   </wsdl:message>
   <wsdl:message name="initializeProfilesResponse">
      <wsdl:part name="result" element="ci:initializeProfilesRespType"/>
   </wsdl:message>
   <wsdl:message name="updateAttributes">
      <wsdl:part name="parameters" element="ci:updateAttributesRqstType"/>
   </wsdl:message>
   <wsdl:message name="updateAttributesResponse">
      <wsdl:part name="result" element="ci:updateAttributesRespType"/>
   </wsdl:message>
   <wsdl:message name="updateCredentials">
      <wsdl:part name="parameters" element="ci:updateCredentialsRqstType"/>
   </wsdl:message>
   <wsdl:message name="updateCredentialsResponse">
      <wsdl:part name="result" element="ci:updateCredentialsRespType"/>
   </wsdl:message>
   <wsdl:message name="updateStatus">
      <wsdl:part name="parameters" element="ci:updateStatusRqstType"/>
   </wsdl:message>
   <wsdl:message name="updateStatusResponse">
      <wsdl:part name="result" element="ci:updateStatusRespType"/>
   </wsdl:message>
   <wsdl:message name="updateAuthorization">
      <wsdl:part name="parameters" element="ci:updateAuthorizationRqstType"/>
   </wsdl:message>
   <wsdl:message name="updateAuthorizationResponse">
      <wsdl:part name="result" element="ci:updateAuthorizationRespType"/>
   </wsdl:message>
   <wsdl:message name="sendNotification">
      <wsdl:part name="parameters" element="ci:sendNotificationRqstType"/>
   </wsdl:message>
   <wsdl:message name="sendNotificationResponse">
      <wsdl:part name="result" element="ci:sendNotificationRespType"/>
   </wsdl:message>
   <wsdl:message name="getProfiles">
      <wsdl:part name="parameters" element="ci:getProfilesRqstType"/>
   </wsdl:message>
   <wsdl:message name="getProfilesResponse">
      <wsdl:part name="result" element="ci:getProfilesRespType"/>
   </wsdl:message>
   <wsdl:message name="searchProfile">
      <wsdl:part name="parameters" element="ci:searchProfileRqstType"/>
   </wsdl:message>
   <wsdl:message name="searchProfileResponse">
      <wsdl:part name="result" element="ci:searchProfileRespType"/>
   </wsdl:message>
   <wsdl:message name="getTransactionHistory">
      <wsdl:part name="parameters" element="ci:getTransactionHistoryRqstType"/>
   </wsdl:message>
   <wsdl:message name="getTransactionHistoryResponse">
      <wsdl:part name="result" element="ci:getTransactionHistoryRespType"/>
   </wsdl:message>
   <wsdl:message name="getIdentityToken">
      <wsdl:part name="parameters" element="ci:getIdentityTokenRqstType"/>
   </wsdl:message>
   <wsdl:message name="getIdentityTokenResponse">
      <wsdl:part name="result" element="ci:getIdentityTokenRespType"/>
   </wsdl:message>
   <wsdl:message name="ping">
      <wsdl:part name="parameters" element="ping:ping"/>
   </wsdl:message>
   <wsdl:message name="pingResponse">
      <wsdl:part name="result" element="ping:pingResponse"/>
   </wsdl:message>
   <wsdl:message name="ServiceException">
      <wsdl:part name="fault" element="ex:ServiceException"/>
   </wsdl:message>
   <wsdl:message name="PolicyException">
      <wsdl:part name="fault" element="ex:PolicyException"/>
   </wsdl:message>
   <wsdl:portType name="ClientIdentityProfileServicePortType">
      <wsdl:operation name="initializeProfiles">
         <wsdl:input message="iface:initializeProfiles"/>
         <wsdl:output message="iface:initializeProfilesResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="updateAttributes">
         <wsdl:input message="iface:updateAttributes"/>
         <wsdl:output message="iface:updateAttributesResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="updateCredentials">
         <wsdl:input message="iface:updateCredentials"/>
         <wsdl:output message="iface:updateCredentialsResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="updateStatus">
         <wsdl:input message="iface:updateStatus"/>
         <wsdl:output message="iface:updateStatusResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="updateAuthorization">
         <wsdl:input message="iface:updateAuthorization"/>
         <wsdl:output message="iface:updateAuthorizationResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="sendNotification">
         <wsdl:input message="iface:sendNotification"/>
         <wsdl:output message="iface:sendNotificationResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="getProfiles">
         <wsdl:input message="iface:getProfiles"/>
         <wsdl:output message="iface:getProfilesResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="searchProfile">
         <wsdl:input message="iface:searchProfile"/>
         <wsdl:output message="iface:searchProfileResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="getTransactionHistory">
         <wsdl:input message="iface:getTransactionHistory"/>
         <wsdl:output message="iface:getTransactionHistoryResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="getIdentityToken">
         <wsdl:input message="iface:getIdentityToken"/>
         <wsdl:output message="iface:getIdentityTokenResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
      <wsdl:operation name="ping">
         <wsdl:input message="iface:ping"/>
         <wsdl:output message="iface:pingResponse"/>
         <wsdl:fault name="ServiceException" message="iface:ServiceException"/>
         <wsdl:fault name="PolicyException" message="iface:PolicyException"/>
      </wsdl:operation>
   </wsdl:portType>
   <wsdl:binding name="ClientIdentityProfileServiceSOAP"
                 type="iface:ClientIdentityProfileServicePortType">
      <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
      <wsdl:operation name="initializeProfiles">
         <wsdl:documentation>Creates one or more profiles in Client Identity that is pending completion of credentials being entered by the user.
An application must call this after deciding the user needs a new Identity.  There are two options, which are controlled by the notificationMethod parameter:
•	none - calling application must redirect user to Client Identity’s self-registration page with the registration token to complete profile 
•	email - Client Identity will send an email, based on the portal parameter, that will include a link to Client Identity’s registration page

The application is responsible to store the uuid returned and ensure it is mapped to the application’s internal data.
</wsdl:documentation>
         <soap:operation soapAction="initializeProfiles"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="updateAttributes">
         <wsdl:documentation>Updates the following non-sensitive attributes of an Identity in Client Identity:
			•	First name
			•	Last name
			•	Language Preference</wsdl:documentation>
         <soap:operation soapAction="updateAttributes"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="updateCredentials">
         <wsdl:documentation>Updates the following attributes that are used as credentials in Client Identity:
			•	Email
			•	Password – flag to request a temporary password
		For the password flag, a message will be sent to the profile’s notification address with the temporary password.
		For a change in email, messages to both old and new email addresses will be sent.
</wsdl:documentation>
         <soap:operation soapAction="updateCredentials"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="updateStatus">
         <wsdl:documentation>Updates the status of a profile in Client Identity.  The new status can be:
			•	Active
			•	Locked
			•	Deleted
		If the current status is Pending, the new status can only be set to Deleted.
		If the new status is set to Deleted, the username and email address of the profile will become available for re-use by other Identities.
</wsdl:documentation>
         <soap:operation soapAction="updateStatus"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="updateAuthorization">
         <wsdl:documentation>Updates the coarse grain authorization of a profile in Client Identity.  This is done by adding or removing coarse grain roles in Client Identity.  These roles should be high-level, and will be used by Sun Access Manager to restrict access to an application.  For e.g., there may be one high level role each for consumer telus.com, telusmobility, cdss, etc.  Roles must exist in the authentication domain of user</wsdl:documentation>
         <soap:operation soapAction="updateAuthorization"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="sendNotification">
         <wsdl:documentation>Resends messages to the user’s notification address.
			Messages that can be resent are:
				•	registration
				•	email validation
				•	user name (with aliases – aka email – tbd)
			Resending the registration message will also reset the registration expiry period.
</wsdl:documentation>
         <soap:operation soapAction="sendNotification"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getProfiles">
         <wsdl:documentation>Find all the profiles in Client Identity that matches the list of given uuids.</wsdl:documentation>
         <soap:operation soapAction="getProfiles"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="searchProfile">
         <wsdl:documentation>Finds all profiles in Client Identity that match all of the search criteria given.</wsdl:documentation>
         <soap:operation soapAction="searchProfile"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getTransactionHistory">
         <wsdl:documentation>Returns audited transaction data such as login success, login failures, change password, change secret Question and Answer events, etc.</wsdl:documentation>
         <soap:operation soapAction="getTransactionHistory"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="getIdentityToken">
         <wsdl:documentation>Generate a token for the identity that could be used to recover the username.</wsdl:documentation>
         <soap:operation soapAction="getIdentityToken"/>
         <wsdl:input>
            <soap:body use="literal" parts="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal" parts="result"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="ping">
         <wsdl:documentation/>
         <soap:operation soapAction="ping"/>
         <wsdl:input>
            <soap:body parts="parameters" use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body parts="result" use="literal"/>
         </wsdl:output>
         <wsdl:fault name="ServiceException">
            <soap:fault name="ServiceException" use="literal"/>
         </wsdl:fault>
         <wsdl:fault name="PolicyException">
            <soap:fault name="PolicyException" use="literal"/>
         </wsdl:fault>
      </wsdl:operation>
   </wsdl:binding>
   <wsdl:service name="ClientIdentityProfileService_v2_2">
      <wsdl:port name="ClientIdentityProfileServicePort"
                 binding="iface:ClientIdentityProfileServiceSOAP">
         <soap:address location="http://em-securitymgmt-ent-dv1.tsl.telus.com/ClientIdentityProfileService_ws/ClientIdentityProfileService_v2_0/ClientIdentityProfileService_v2_0"/>
      </wsdl:port>
   </wsdl:service>
</wsdl:definitions>